global

    maxconn 256
    daemon

    # debian settings
    user haproxy
    group haproxy

    # log settings
    #log 127.0.0.1   local0
    #log 127.0.0.1   local1 notice
    #debug
    #quiet

defaults

    #log     global
    #option  httplog
    #option  dontlognull
    #option  logasap
    mode     http
    timeout  connect 5000ms
    timeout  client 50000ms
    timeout  server 50000ms
    
frontend http-in  
  
    # handle all incoming port 80 requests
    bind *:80
    
    # Initial logging setup. Needs server configuration: http://linuxadminzone.com/enable-or-fix-logging-for-haproxy-load-balancer/
    # Commented out until server configuration is ready
    #
    #option httplog
    #log global 
    #log 127.0.0.1:514 local0 debug    

    acl too_fast fe_sess_rate ge 20
    use_backend ease-up-y0 if too_fast
    tcp-request content accept if ! too_fast

    # Create ACL's for paths that begins with the string after -i (-i is the ignore case flag)
    # For is_theme we look for "theme" anywhere on the path
    acl is_simple     path_beg -i /data-bruge.asp
    acl is_advanced   path_beg -i /advanced-search
    acl is_search     path_beg -i /simple-search
    acl is_catalogue  path_beg -i /catalogue
    acl is_series_catalogue  path_beg -i /catalogue-series
    acl is_osmh_catalogue  path_beg -i /osmh-catalogue
    acl is_urn        path_beg -i /urn-resolution
    acl is_theme      path_dir -i theme
    acl is_order      path_dir -i /order
    acl is_js         path_dir -i /js/    
    acl is_tech_info  path_beg -i /search-technical-information
    acl is_search_api path_beg -i /search-api

    # If one of the ACL's match then we forward the request to existdb backend
    use_backend existdb if is_simple
    use_backend existdb if is_advanced
    use_backend existdb if is_search
    use_backend existdb if is_catalogue
    use_backend existdb if is_series_catalogue
    use_backend existdb if is_osmh_catalogue
    use_backend existdb if is_theme
    use_backend existdb if is_urn
    use_backend existdb if is_order
    use_backend existdb if is_js
    use_backend existdb if is_tech_info
    use_backend existdb if is_search_api


    # Default is to forward the request to the IIS server
    default_backend ddadefault

backend ddadefault

    server s2 @INTERNAL_WEB_HOST_NAME@ maxconn 32

    # The connection is closed after each request in order to re-evaluate the ACL upon each request
    option httpclose

backend existdb

    # Initial logging setup. Needs server configuration: http://linuxadminzone.com/enable-or-fix-logging-for-haproxy-load-balancer/
    # Commented out until server configuration is ready
    #
    #option httplog
    #log global 
    #log 127.0.0.1:514 local0 debug 

    # Create ACL's for paths
    # In general we look at the beginning of the path using path_beg
    # We also look for url parameters using url_sub (returns true if substring is contained within the url, not just the path)
    # We use regex (url_reg) to create the "does not contain" expressions of url parameters

    acl is_osmh_catalogue   path_beg -i /osmh-catalogue
    acl is_landingpage   path_beg -i /catalogue
    acl is_series_landingpage   path_beg -i /catalogue-series
    acl is_lang          url_sub  -i lang=
    acl is_not_lang      url_reg  -i ^((?!lang=).)*$
    acl is_version       url_sub  -i version=
    acl is_not_version   url_reg  -i ^((?!version=).)*$
    acl is_simple        path     -i /data-bruge.asp
    acl is_advanced      path_beg -i /advanced-search
    acl is_search        path_beg -i /simple-search
    acl is_theme         path_dir -i theme
    acl is_urn           path_beg -i /urn-resolution
    acl is_order         path_beg -i /order
    acl is_js            path_dir -i js
    acl is_tech_info            path_beg -i /search-technical-information
    acl is_tech_info_cv_doc     path_beg -i /search-technical-information/cv/doc      
    acl is_search_api           path_beg -i /search-api
    acl is_search_string        url_sub  -i search-string=
    
    # Rewrite requests where the ACL's conditions are met (ignoring case). The ACL conditions can be seen as the rightmost on each line below.
    # Example request: GET /catalogue/3 HTTP/1.1
    # In general what we do below is to match/capture the "GET " and then match/capture the paths and parameters and then match/capture the " HTTP/1.1" including the spaces.
    # We then output the result using the captured groups
    # To define groups we use (group content) and \group-number where the parentheses creates the group and the backslash number references that group.
    # the \ is the escape character and that is used to escape spaces as well below. Ex: \ \1 is a space before outputting the first group 

    # theme, js and portale search page
    reqirep ^([^\ ]*)\ ([^\ ]*)/theme/([^\ ]*)\ (.*)$                                 \1\ /exist/rest/db/apps/web/theme/\3\ \4                                                  if is_theme
    reqirep ^([^\ ]*)\ ([^\ ]*)/js/([^\ ]*)\ (.*)$                    		      \1\ /exist/rest/db/apps/web/js/\3\ \4                                                     if is_js
    reqirep ^([^\ ]*)\ /data-bruge\.asp\ (.*)$                                        \1\ /exist/rest/db/apps/web/simple.xquery\ \2                                             if is_simple

    # search pages and lang
    reqirep ^([^\ ]*)\ /simple-search\ (.*)$                                          \1\ /exist/rest/db/apps/web/simple.xquery\ \2                                             if is_search
    reqirep ^([^\ ]*)\ /simple-search\?lang=(\w\w)\ (.*)$                             \1\ /exist/rest/db/apps/web/simple.xquery?lang=\2\ \3                                     if is_search is_lang
    reqirep ^([^\ ]*)\ /advanced-search\?lang=(\w\w)\ (.*)$                           \1\ /exist/rest/db/apps/web/advanced.xquery?lang=\2\ \3                                   if is_advanced is_lang
    reqirep ^([^\ ]*)\ /advanced-search\ (.*)$                                        \1\ /exist/rest/db/apps/web/advanced.xquery\ \2                                           if is_advanced

    # osmh catalouge listing
    reqirep ^([^\ ]*)\ /osmh-catalogue\ (.*)$                                  \1\ /exist/rest/db/apps/web/osmh-catalogue.xquery\ \2                                          if is_osmh_catalogue

    # catalouge listing
    reqirep ^([^\ ]*)\ /catalogue\ (.*)$               				      \1\ /exist/rest/db/apps/web/catalogue.xquery\ \2                                          if is_landingpage
    reqirep ^([^\ ]*)\ /catalogue/\ (.*)$              				      \1\ /exist/rest/db/apps/web/catalogue.xquery\ \2                                          if is_landingpage

    # series catalogue listing
    reqirep ^([^\ ]*)\ /catalogue-series\ (.*)$               				      \1\ /exist/rest/db/apps/web/catalogue-series.xquery\ \2                                          if is_series_landingpage
    reqirep ^([^\ ]*)\ /catalogue-series/\ (.*)$              				      \1\ /exist/rest/db/apps/web/catalogue-series.xquery\ \2                                          if is_series_landingpage

    # landing page and lang
    reqirep ^([^\ ]*)\ /catalogue/(\d*)\ (.*)$                                        \1\ /exist/rest/db/apps/web/landingpage.xquery?studyid=\2\ \3                             if is_landingpage is_not_lang is_not_version 
    reqirep ^([^\ ]*)\ /catalogue/(\d*)\?lang=(\w\w)\ (.*)$                           \1\ /exist/rest/db/apps/web/landingpage.xquery?studyid=\2&lang=\3\ \4                     if is_landingpage is_lang is_not_version

    # series landing page and lang
    reqirep ^([^\ ]*)\ /catalogue-series/(\d*)\ (.*)$                                        \1\ /exist/rest/db/apps/web/landingpage-series.xquery?seriesid=\2\ \3                             if is_series_landingpage is_not_lang is_not_version 
    reqirep ^([^\ ]*)\ /catalogue-series/(\d*)\?lang=(\w\w)\ (.*)$                           \1\ /exist/rest/db/apps/web/landingpage-series.xquery?seriesid=\2&lang=\3\ \4                     if is_series_landingpage is_lang is_not_version

    # codebook with lang
    reqirep ^([^\ ]*)\ /catalogue/(\d*)/doc/codebook\ (.*)$                           \1\ /exist/rest/db/apps/web/codebook.xquery?studyid=\2\ \3                                if is_landingpage is_not_lang is_not_version
    reqirep ^([^\ ]*)\ /catalogue/(\d*)/doc/codebook\?lang=(\w\w)\ (.*)$              \1\ /exist/rest/db/apps/web/codebook.xquery?studyid=\2&lang=\3\ \4                        if is_landingpage is_lang is_not_version

    # urn resolution plus fragments
    reqirep ^([^\ ]*)\ /urn-resolution/fragments/ddi-3.1\?urn=[Uu][Rr][Nn]:[Dd][Dd][Ii]:[A-Za-z]+\.[A-Za-z][A-Za-z0-9\-]*:([A-Z|a-z|0-9|_|\-|\*|@|$|\.]+):([A-Z|a-z|0-9|_|\-|\*|@|$|\.]+)\ (.*)$        \1\ /exist/rest/db/apps/dda-urn/rest/fragments-urn-resolution.xquery?urn=urn:ddi:dk.dda:\2:\3\ \4   if is_urn

    # urn resolution
    reqirep ^([^\ ]*)\ /urn-resolution/ddi-3.1\?urn=[Uu][Rr][Nn]:[Dd][Dd][Ii]:([A-Za-z])+\.([A-Za-z][A-Za-z0-9\-]*):([A-Z|a-z|0-9|_|\-|\*|@|$|\.]+):([A-Z|a-z|0-9|_|\-|\*|@|$|\.]+)\ (.*)$        \1\ /exist/rest/db/apps/dda-urn/rest/urn-resolution.xquery?urn=urn:ddi:\2.\3:\4:\5\ \6   if is_urn
   
    # urn resolution url encoded
    reqirep ^([^\ ]*)\ /urn-resolution/ddi-3.1\?urn=[Uu][Rr][Nn]%3A[Dd][Dd][Ii]%3A[A-Za-z]+\.[A-Za-z][A-Za-z0-9\-]*%3A([A-Z|a-z|0-9|_|\-|\*|@|$|\.]+)%3A([A-Z|a-z|0-9|_|\-|\*|@|$|\.]+)\ (.*)$        \1\ /exist/rest/db/apps/dda-urn/rest/urn-resolution.xquery?urn=urn:ddi:dk.dda:\2:\3\ \4   if is_urn

    # urn resolution url encoded plus fragments
    reqirep ^([^\ ]*)\ /urn-resolution/fragments/ddi-3.1\?urn=[Uu][Rr][Nn]%3A[Dd][Dd][Ii]%3A[A-Za-z]+\.[A-Za-z][A-Za-z0-9\-]*%3A([A-Z|a-z|0-9|_|\-|\*|@|$|\.]+)%3A([A-Z|a-z|0-9|_|\-|\*|@|$|\.]+)\ (.*)$        \1\ /exist/rest/db/apps/dda-urn/rest/fragments-urn-resolution.xquery?urn=urn:ddi:dk.dda:\2:\3\ \4   if is_urn

    # order
    reqirep ^([^\ ]*)\ /order/order\.html\ (.*)$                                      \1\ /exist/rest/db/apps/web/order/order.html\ \2                                          if is_order

    # catalogue listing with lang
    reqirep ^([^\ ]*)\ /catalogue\?lang=(\w\w)\ (.*)$    			      \1\ /exist/rest/db/apps/web/catalogue.xquery?lang=\2\ \3                                  if is_landingpage is_lang
    
    # series catalogue listing with lang
    reqirep ^([^\ ]*)\ /catalogue-series\?lang=(\w\w)\ (.*)$    			      \1\ /exist/rest/db/apps/web/catalogue-series.xquery?lang=\2\ \3                                  if is_series_landingpage is_lang

    # landing page with version and lang
    reqirep ^([^\ ]*)\ /catalogue/(\d*)\?version=(\d+\.\d+\.\d+)\ (.*)$               \1\ /exist/rest/db/apps/web/landingpage.xquery?studyid=\2&version=\3\ \4                  if is_landingpage is_not_lang is_version
    reqirep ^([^\ ]*)\ /catalogue/(\d*)\?lang=(\w\w)&version=(\d+\.\d+\.\d+)\ (.*)$   \1\ /exist/rest/db/apps/web/landingpage.xquery?studyid=\2&lang=\3&version=\4\ \5          if is_landingpage is_lang is_version
    
    # series landing page with version and lang
    reqirep ^([^\ ]*)\ /catalogue-series/(\d*)\?version=(\d+\.\d+\.\d+)\ (.*)$               \1\ /exist/rest/db/apps/web/landingpage-series.xquery?studyid=\2&version=\3\ \4                  if is_series_landingpage is_not_lang is_version
    reqirep ^([^\ ]*)\ /catalogue-series/(\d*)\?lang=(\w\w)&version=(\d+\.\d+\.\d+)\ (.*)$   \1\ /exist/rest/db/apps/web/landingpage-series.xquery?studyid=\2&lang=\3&version=\4\ \5          if is_series_landingpage is_lang is_version
    
    # dda study metadata
    reqirep ^([^\ ]*)\ /catalogue/(\d*)/doc/ddastudymetadata\ (.*)$                   \1\ /exist/rest/db/apps/web/metadata.xquery?studyid=\2\ \3                                if is_landingpage is_not_lang is_not_version
    
    # tech info
    reqirep ^([^\ ]*)\ /search-technical-information\ (.*)$                           \1\ /exist/rest/db/apps/web/techinfo.xquery\ \2                                           if is_tech_info is_not_lang is_not_version
    reqirep ^([^\ ]*)\ /search-technical-information\?lang=(\w\w)\ (.*)$              \1\ /exist/rest/db/apps/web/techinfo.xquery?lang=\2\ \3                                   if is_tech_info is_lang is_not_version
    reqirep ^([^\ ]*)\ /search-technical-information/cv/doc/(.*)\ (.*)$               \1\ /exist/rest/db/apps/web/cv-documentation.xquery?cv=\2\ \3                             if is_tech_info is_not_lang is_not_version is_tech_info_cv_doc    
    reqirep ^([^\ ]*)\ /search-technical-information/cv/(.*)\ (.*)$                   \1\ /exist/rest/db/apps/web/transform/landingpage/cv/\2\ \3                               if is_tech_info is_not_lang is_not_version
    
    reqirep ^([^\ ]*)\ /search-technical-information/schema/([^\ ]*)\ (.*)$           \1\ /exist/rest/db/apps/dda/schema/\2\ \3                                                 if is_tech_info is_not_lang is_not_version
    
    # search api
    reqirep ^([^\ ]*)\ /search-api\ (.*)$                                             \1\ /exist/rest/db/apps/web/search-api.xquery\ \2	                                        if is_search_api
    reqirep ^([^\ ]*)\ /search-api\?(.*)&(.*)\ (.*)$                                  \1\ /exist/rest/db/apps/web/search-api.xquery?\2&\3\ \4   	                        if is_search_api is_search_string

    # exist-authentication, basic http header (the user:password string is base64 encoded)
    reqadd Authorization:\ Basic\ @USR_PASSWD_BASE64@
    server s1 @EXIST_HOST_NAME@ maxconn 32

    # connection closed -after each request in order to re-evaluate the ACL upon each request
    option httpclose    


backend ease-up-y0
	mode http
	errorfile 503 @HAPROXY_RATE_ERROR_PAGE@

listen admin

    # haproxy stats page -available on host:8095/haproxy?stats
    bind *:8095
    stats enable
    #stats auth someuser:somepassword

