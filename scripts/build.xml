<project name="dda" default="list" basedir=".">
	<description>Build file for deployment and cofiguration of DDA Indexingplatform to an eXist DB</description>

	<property environment="env" />
	<!-- import default properties from file -->
	<xmlproperty file="${basedir}/config.xml" />

	<path id="classpath.core">
		<fileset dir="${config.exist-dir}/lib/core">
			<include name="*.jar" />
		</fileset>
		<pathelement path="${config.exist-dir}/exist.jar" />
		<pathelement path="${config.exist-dir}/exist-optional.jar" />
	</path>

	<typedef resource="org/exist/ant/antlib.xml" uri="http://exist-db.org/ant">
		<classpath refid="classpath.core" />
	</typedef>

	<path id="project.classpath">
		<fileset dir="${basedir}/lib">
			<include name="*.jar" />
		</fileset>
	</path>

	<property name="repository.url" value="http://ddixslt.googlecode.com/svn" />
	<property name="ddi-html.dir" value="${basedir}/bin/ddi-xslt/ddi-html/ddi3_1" />

	<target name="clean" description="Clean up">
		<delete quiet="true" dir="${basedir}/bin" />
	</target>

	<target name="list" description="List the collections and resources">
		<xdb:list xmlns:xdb="http://exist-db.org/ant" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db" collections="true" outputproperty="collections" user="${config.username}" password="${config.password}" />
	</target>

	<target name="deploy" depends="import-stylesheet,apply-config,deploy-dda,deploy-web,deploy-urn" description="Deploy all the parts of the index platform" />

	<target name="import-stylesheet" description="Import DDI stylesheets">
		<mkdir dir="${config.bin-dir}" />
		<delete dir="${basedir}/bin/ddi-xslt" />
		<exec executable="git" newenvironment="false" dir="${basedir}/bin/">
			<arg value="clone" />
			<arg value="--no-checkout" />
			<arg value="--depth" />
			<arg value="1" />
			<arg value="-v" />
			<arg value="https://github.com/MetadataTransform/ddi-xslt.git" />
		</exec>
		<exec executable="git" newenvironment="false" dir="${basedir}/bin/ddi-xslt">
			<arg value="checkout" />
			<arg value="master" />
			<arg value="ddi-html/ddi3_1" />
		</exec>
	</target>

	<target name="apply-config" description="Applies hostname configuration to haproxy, nginx and queries">
		<mkdir dir="${config.bin-dir}/web" />
		<mkdir dir="${config.bin-dir}/haproxy" />
		<mkdir dir="${config.bin-dir}/nginx" />

		<!-- haproxy cfg -->
		<loadfile srcfile="../haproxy/haproxy.cfg" property="result-0">
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
					<param type="token" name="INTERNAL_WEB_HOST_NAME" value="${config.haproxy-internal-webserver-hostname}" />
					<param type="token" name="WEB_HOST_NAME" value="${config.haproxy-webserver-hostname}" />
					<param type="token" name="EXIST_HOST_NAME" value="${config.haproxy-exist-hostname}" />
					<param type="token" name="USR_PASSWD_BASE64" value="${config.haproxy-exist-usrpasswdbase64}" />
					<param type="token" name="HAPROXY_RATE_ERROR_PAGE" value="${config.haproxy-rate-error-page}" />
				</filterreader>
			</filterchain>
		</loadfile>
		<echo file="${config.bin-dir}/haproxy/haproxy.cfg">${result-0}</echo>

		<!-- nginx conf -->
		<loadfile srcfile="../nginx/forsyn_exist_db.conf" property="result-14">
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
					<param type="token" name="NGINX_SERVER_NAME" value="${config.nginx-server-name}" />
					<param type="token" name="EXIST_HOST_NAME" value="${config.haproxy-exist-hostname}" />
					<param type="token" name="USR_PASSWD_BASE64" value="${config.haproxy-exist-usrpasswdbase64}" />
				</filterreader>
			</filterchain>
		</loadfile>
		<echo file="${config.bin-dir}/nginx/forsyn_exist_db.conf">${result-14}</echo>

		<!-- copy queries -->
		<copy todir="${config.bin-dir}/web" overwrite="true">
			<fileset dir="../web">
				<include name="**/*.xquery" />
			</fileset>
		</copy>

		<!-- advanced.xquery -->
		<loadfile srcfile="../web/advanced.xquery" property="result-1">
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
					<param type="token" name="WEB-HOST_NAME" value="${config.haproxy-webserver-hostname}" />
				</filterreader>
			</filterchain>
		</loadfile>
		<echo file="${config.bin-dir}/web/advanced.xquery">${result-1}</echo>

		<!-- simple.xquery -->
		<loadfile srcfile="../web/simple.xquery" property="result-2">
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
					<param type="token" name="WEB-HOST_NAME" value="${config.haproxy-webserver-hostname}" />
				</filterreader>
			</filterchain>
		</loadfile>
		<echo file="${config.bin-dir}/web/simple.xquery">${result-2}</echo>

		<!-- landingpage.xquery -->
		<loadfile srcfile="../web/landingpage.xquery" property="result-3">
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
					<param type="token" name="WEB-HOST_NAME" value="${config.haproxy-webserver-hostname}" />
				</filterreader>
			</filterchain>
		</loadfile>
		<echo file="${config.bin-dir}/web/landingpage.xquery">${result-3}</echo>

		<!-- catalogue.xquery -->
		<loadfile srcfile="../web/catalogue.xquery" property="result-4">
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
					<param type="token" name="WEB-HOST_NAME" value="${config.haproxy-webserver-hostname}" />
				</filterreader>
			</filterchain>
		</loadfile>
		<echo file="${config.bin-dir}/web/catalogue.xquery">${result-4}</echo>

		<!-- branding result-main.xsl-->
		<loadfile srcfile="../web/transform/searchresult/result-main.xsl" property="result-5">
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
					<param type="token" name="UI-BRANDING-RESULT" value="${config.ui-branding-result}" />
					<param type="token" name="WEB-SITE-TRACKING" value="${config.web-site-tracking}" />
				</filterreader>
			</filterchain>
		</loadfile>
		<echo file="${config.bin-dir}/web/transform/searchresult/result-main.xsl">${result-5}</echo>

		<!-- branding lp-main.xsl -->
		<loadfile srcfile="../web/transform/landingpage/lp-main.xsl" property="result-6">
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
					<param type="token" name="UI-BRANDING-RESULT" value="${config.ui-branding-result}" />
					<param type="token" name="WEB-SITE-TRACKING" value="${config.web-site-tracking}" />
				</filterreader>
			</filterchain>
		</loadfile>
		<echo file="${config.bin-dir}/web/transform/landingpage/lp-main.xsl">${result-6}</echo>

		<!-- catalogue.xsl -->
		<loadfile srcfile="../web/transform/searchresult/catalogue.xsl" property="result-7">
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
					<param type="token" name="UI-BRANDING-RESULT" value="${config.ui-branding-result}" />
					<param type="token" name="WEB-SITE-TRACKING" value="${config.web-site-tracking}" />
				</filterreader>
			</filterchain>
		</loadfile>
		<echo file="${config.bin-dir}/web/transform/searchresult/catalogue.xsl">${result-7}</echo>

		<!-- techinfo.xsl -->
		<loadfile srcfile="../web/transform/searchresult/techinfo.xsl" property="result-8">
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
					<param type="token" name="UI-BRANDING-RESULT" value="${config.ui-branding-result}" />
					<param type="token" name="WEB-SITE-TRACKING" value="${config.web-site-tracking}" />
				</filterreader>
			</filterchain>
		</loadfile>
		<echo file="${config.bin-dir}/web/transform/searchresult/techinfo.xsl">${result-8}</echo>

		<!-- techinfo.xquery -->
		<loadfile srcfile="../web/techinfo.xquery" property="result-9">
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
					<param type="token" name="WEB-HOST_NAME" value="${config.haproxy-webserver-hostname}" />
				</filterreader>
			</filterchain>
		</loadfile>
		<echo file="${config.bin-dir}/web/techinfo.xquery">${result-9}</echo>

		<!-- scheduler/properties.xquery -->
		<loadfile srcfile="../scheduler/properties.xquery" property="result-10">
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
					<param type="token" name="USERNAME" value="${config.username}" />
					<param type="token" name="PASSWORD" value="${config.password}" />
				</filterreader>
			</filterchain>
		</loadfile>
		<echo file="${config.bin-dir}/scheduler/properties.xquery">${result-10}</echo>

		<!-- landingpage-series.xquery -->
		<loadfile srcfile="../web/landingpage-series.xquery" property="result-11">
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
					<param type="token" name="WEB-HOST_NAME" value="${config.haproxy-webserver-hostname}" />
				</filterreader>
			</filterchain>
		</loadfile>
		<echo file="${config.bin-dir}/web/landingpage-series.xquery">${result-11}</echo>

		<!-- catalogue-series.xquery -->
		<loadfile srcfile="../web/catalogue-series.xquery" property="result-12">
			<filterchain>
				<filterreader classname="org.apache.tools.ant.filters.ReplaceTokens">
					<param type="token" name="WEB-HOST_NAME" value="${config.haproxy-webserver-hostname}" />
				</filterreader>
			</filterchain>
		</loadfile>
		<echo file="${config.bin-dir}/web/catalogue-series.xquery">${result-12}</echo>
	</target>

	<target name="deploy-dda" description="Deploy the index platform">
		<!-- store the index files -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/system/config/db/apps/dda" createcollection="true" srcfile="../dda/index/collection.xconf" />
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/system/config/db/apps/dda-denormalization" createcollection="true" srcfile="../dda-denormalization/index/collection.xconf" />
		<!-- store the xquery function files -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/dda/lib" createcollection="true">
			<fileset dir="../dda/lib">
				<include name="*.xquery" />
			</fileset>
		</xdb:store>
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/dda-denormalization" createcollection="true">
			<fileset dir="../dda-denormalization">
				<include name="*.xquery" />
			</fileset>
		</xdb:store>
		<!-- store the restful interfaces -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/dda/rest" createcollection="true">
			<fileset dir="../dda/rest">
				<include name="*.xquery" />
			</fileset>
		</xdb:store>
		<!-- store the scheduler -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/dda-denormalization/scheduler" createcollection="true">
			<fileset dir="../scheduler">
				<include name="*.xquery" />
			</fileset>
			<fileset dir="${basedir}/bin/scheduler">
				<include name="*.xquery" />
			</fileset>
		</xdb:store>
		<!-- create collections for storing the DB resources -->
		<xdb:create xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/dda" collection="data" />
		<xdb:create xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/dda-denormalization" collection="data" />
	</target>

	<target name="deploy-web" depends="minify" description="Deploy the web interface">
		<!-- store the rest files -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/web" createcollection="true" createsubcollections="true">
			<fileset dir="../web">
				<include name="**/*.xquery" />
				<include name="**/*.xml" />
				<exclude name="**/ddi-html/**/*.*" />
			</fileset>
		</xdb:store>
		<!-- store the xslt files -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/web/transform" createcollection="true" createsubcollections="true" type="xml">
			<fileset dir="../web/transform">
				<include name="**/*.*" />
			</fileset>
		</xdb:store>
		<!-- store the java script files -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/web/js" createcollection="true" createsubcollections="true">
			<fileset dir="${basedir}/bin/minify/js">
				<include name="**/*.*" />
			</fileset>
		</xdb:store>
		<!-- store the theme files -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/web/theme" createcollection="true" createsubcollections="true">
			<fileset dir="${basedir}/bin/minify/css">
				<include name="**/*.*" />
			</fileset>
			<fileset dir="../web/theme">
				<include name="**/*.*" />
				<exclude name="**/*.css" />
				<exclude name="**/*.js" />
			</fileset>
		</xdb:store>
		<!-- store the order form files -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/web/order" createcollection="true">
			<fileset dir="../web/order">
				<include name="**/*.*" />
			</fileset>
		</xdb:store>

		<!-- ddi-html xslt -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/web/transform/codebook/" createcollection="true">
			<fileset dir="${ddi-html.dir}">
				<include name="*.xsl" />
			</fileset>
		</xdb:store>
		<!-- ddi-html i18n -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/web/transform/codebook/i18n" createcollection="true">
			<fileset dir="${ddi-html.dir}/i18n">
				<include name="*.*" />
			</fileset>
		</xdb:store>
		<!-- ddi-html js -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/web/js" createcollection="true">
			<fileset dir="${ddi-html.dir}/js">
				<include name="*.*" />
			</fileset>
		</xdb:store>
		<!-- ddi-html theme/default -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/web/theme" createcollection="true">
			<fileset dir="${ddi-html.dir}/theme/default">
				<include name="*.*" />
			</fileset>
		</xdb:store>
		<!-- ddi-html img -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/web/theme/img" createcollection="true">
			<fileset dir="${ddi-html.dir}/theme/default/img">
				<include name="*.*" />
			</fileset>
		</xdb:store>
		<!-- schema -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/dda/schema" createcollection="true">
			<fileset dir="../web/schemas">
				<include name="**/*.xsd" />
			</fileset>
			<fileset dir="../dda/schema">
				<include name="**/*.xsd" />
			</fileset>
		</xdb:store>

		<!-- store the modded files -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/web" createcollection="true" createsubcollections="true">
			<fileset dir="${config.bin-dir}/web">
				<include name="**/*.xquery" />
				<include name="**/*.xsl" />
			</fileset>
		</xdb:store>
	</target>

	<target name="deploy-urn" description="Deploy the URN resolution">
		<!-- store the index files -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/system/config/db/apps/dda-urn" createcollection="true" srcfile="../dda-urn/index/collection.xconf" />
		<!-- store the xquery function files -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/dda-urn/lib" createcollection="true">
			<fileset dir="../dda-urn/lib">
				<include name="*.xquery" />
			</fileset>
		</xdb:store>
		<!-- store the restful interfaces -->
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/dda-urn/rest" createcollection="true">
			<fileset dir="../dda-urn/rest">
				<include name="*.xquery" />
			</fileset>
		</xdb:store>
		<!-- create collections for storing the DB resources -->
		<xdb:create xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/dda-urn" collection="data" />
	</target>

	<target name="storeall" depends="store,store-urn" description="Stores both regular resources and resources for URN resolution" />

	<target name="store" description="Upload the resources to the DB">
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" createcollection="true" createsubcollections="true" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/dda/data">
			<fileset dir="${config.resources-dir}">
				<include name="**/*.xml" />
			</fileset>
		</xdb:store>
	</target>

	<target name="store-urn" description="Upload the urn resources to the DB">
		<xdb:store xmlns:xdb="http://exist-db.org/ant" user="${config.username}" password="${config.password}" createcollection="true" createsubcollections="true" uri="xmldb:exist://localhost:8080/exist/xmlrpc/db/apps/dda-urn/data">
			<fileset dir="${config.urn-resources-dir}">
				<include name="**/*.xml" />
			</fileset>
		</xdb:store>
	</target>

	<target name="minify">
		<taskdef name="yuicompressor" classname="com.metrosix.yuicompressor.anttask.YuiCompressorTask">
			<classpath refid="project.classpath" />
		</taskdef>

		<mkdir dir="${basedir}/bin/minify/js" />
		<yuicompressor todir="${basedir}/bin/minify/js" charset="utf-8" preserveallsemicolons="true" munge="true">
			<fileset dir="../web/js">
				<include name="**/*.js" />
			</fileset>
		</yuicompressor>

		<mkdir dir="${basedir}/bin/minify/css" />
		<yuicompressor todir="${basedir}/bin/minify/css" charset="utf-8" preserveallsemicolons="true" munge="true">
			<fileset dir="../web/theme">
				<include name="**/*.css" />
			</fileset>
		</yuicompressor>
	</target>
</project>
